extends layout

block headContent
	title Address #{address}

block content
	if (result && result.validateaddress)
		if (!result.validateaddress.isvalid)
			h1(class="h3 text-danger") Invalid Address
				br
				small(class="monospace") #{address}
		else
			h1.h3 Address
				br
				small(class="monospace") #{address}

			hr

			if (payoutAddressForMiner)
				div(class="alert alert-primary shadow-sm", style="padding-bottom: 0;")
					div(class="float-left", style="width: 50px; height: 50px; font-size: 18px;")
						i(class="fas fa-certificate fa-2x", style="margin-top: 10px;")

					h4(class="alert-heading h6 font-weight-bold") #{coinConfig.name} Fun

					p
						span This looks like a miner payout address for
						span(class="font-weight-bold") #{payoutAddressForMiner.name}
						if (coinConfig.miningPoolsConfigUrls.length > 1)
							span  (see the configurations:
							each item, index in coinConfig.miningPoolsConfigUrls
								if (index > 0)
									span ,
								a(href=item) config ##{index + 1}
							span )
						else
							span  (see the configuration
							a(href=coinConfig.miningPoolsConfigUrls[0]) here
							span )
			else if (global.specialAddresses[address] && global.specialAddresses[address].type == "donation")
				div(class="alert alert-primary shadow-sm", style="padding-bottom: 0;")
					div(class="float-left", style="width: 50px; height: 50px; font-size: 18px;")
						i(class="fas fa-certificate fa-2x", style="margin-top: 10px;")

					h4(class="alert-heading h6 font-weight-bold") #{coinConfig.name} Fun

					p
						span This is the #{coinConfig.ticker} donation address to support development of this tool. All support is appreciated!

			else if (global.specialAddresses[address] && global.specialAddresses[address].type == "fun")
				div(class="alert alert-primary shadow-sm", style="padding-bottom: 0;")
					div(class="float-left", style="width: 50px; height: 50px; font-size: 18px;")
						i(class="fas fa-certificate fa-2x", style="margin-top: 10px;")

					h4(class="alert-heading h6 font-weight-bold") #{coinConfig.name} Fun

					// special address info
					- var saInfo = global.specialAddresses[address].addressInfo;
					if (saInfo.alertBodyHtml)
						p
							span !{saInfo.alertBodyHtml}

							if (saInfo.referenceUrl && saInfo.referenceUrl.trim().length > 0 && saInfo.alertBodyHtml.indexOf(saInfo.referenceUrl) == -1)
								span
									a(href=saInfo.referenceUrl) Read more

					else
						p
							span #{saInfo.summary}

							if (saInfo.referenceUrl && saInfo.referenceUrl.trim().length > 0)
								span
									a(href=saInfo.referenceUrl) Read more


			if (false)
				pre
					code.json.bg-light #{JSON.stringify(addressObj, null, 4)}

			ul(class='nav nav-tabs mb-3')
				li(class="nav-item")
					a(data-toggle="tab", href="#tab-details", class="nav-link active", role="tab") Details
				li(class="nav-item")
					a(data-toggle="tab", href="#tab-json", class="nav-link", role="tab") JSON


			div(class="tab-content")
				div(id="tab-details", class="tab-pane active", role="tabpanel")

					if (false && config.electrumXServers && config.electrumXServers.length > 0)
						if (session.hideElectrumTrustWarnings != "true")
							div(class="alert alert-primary alert-dismissible clearfix shadow-sm", role="alert")
								span  this explorer is database-free, it doesn't natively support address balances and transaction histories. In order to provide this functionality, address balances and transaction history can be requested from a configurable set of ElectrumX servers. If multiple ElectrumX servers are configured, the results are cross-referenced and conflicts noted. For the transaction history displayed below, only the transaction identifiers from ElectrumX are used; the transaction details are requested via RPC from this app's primary node, as usual.

								a(href="/changeSetting?name=hideElectrumTrustWarnings&value=true", class="close", aria-label="Close", style="text-decoration: none;")
									span(aria-hidden="true") &times;

					div(class="card mb-3 shadow-sm")
						div(class="card-header")
							span(class="h6") Summary
								if (config.addressApi)
										small.text-muted.border-dotted.ml-2(title=`Some details for this address were queried from ${config.addressApi}` data-toggle="tooltip") Trust Note
						div(class="card-body")
							div(class="row")
								div(class="col-md-6")

									if (addressObj.hash)
										div(class="row")
											div(class="summary-split-table-label") Hash 160
											div(class="summary-split-table-content monospace") #{addressObj.hash.toString("hex")}

									if (result.validateaddress.scriptPubKey)
										div(class="row")
											div(class="summary-split-table-label") Script Public Key
											div(class="summary-split-table-content monospace") #{result.validateaddress.scriptPubKey}

									if (Object.hasOwn(addressObj, "version"))
										div(class="row")
											div(class="summary-split-table-label") Version
											div(class="summary-split-table-content monospace") #{addressObj.version}

									if (Object.hasOwn(result.validateaddress, "witness_version"))
										div(class="row")
											div(class="summary-split-table-label") Witness Version
											div(class="summary-split-table-content monospace") #{result.validateaddress.witness_version}

									if (result.validateaddress.witness_program)
										div(class="row")
											div(class="summary-split-table-label") Witness Program
											div(class="summary-split-table-content monospace") #{result.validateaddress.witness_program}

									if (firstSeenTransaction && firstSeenTransaction.confirmations > 0)
										div(class="row")
											div(class="summary-split-table-label") First Seen
											div(class="summary-split-table-content monospace")
												if (getblockchaininfo)
													span Block ##{(getblockchaininfo.blocks - firstSeenTransaction.confirmations).toLocaleString()}
												else
													a(href=("/block/" + firstSeenTransaction.blockhash)) #{firstSeenTransaction.blockhash}

												br

												span #{moment.utc(new Date(firstSeenTransaction.time * 1000)).format("Y-MM-DD HH:mm:ss")} utc
												- var timeAgoTime = firstSeenTransaction.time;
												include includes/time-ago.pug

												if (false)
													pre
														code.json.bg-light #{JSON.stringify(firstSeenTransaction)}

									if (balance)
										if (balance.conflictedResults)
											div(class="row")
												div(class="summary-split-table-label") Balance
												div(class="summary-split-table-content monospace")
													span(class="text-warning") Conflicted ElectrumX Results

													each item in balance.conflictedResults
														- var currencyValue = item.confirmed / coinConfig.baseCurrencyUnit.multiplier;
														include includes/value-display.pug


										else
											div(class="row")
												div(class="summary-split-table-label") Balance
												div(class="summary-split-table-content monospace")
													- var currencyValue = balance.result.confirmed / coinConfig.baseCurrencyUnit.multiplier;
													include includes/value-display.pug

											if (balance.unconfirmed)
												div(class="row")
													div(class="summary-split-table-label") Unconfirmed
													div(class="summary-split-table-content monospace")
														- var currencyValue = balance.unconfirmed / coinConfig.baseCurrencyUnit.multiplier;
														include includes/value-display.pug
									if (addressDetails && addressDetails.balanceSat)
										div(class="row")
											div(class="summary-split-table-label") Balance
											div(class="summary-split-table-content monospace")
												- var currencyValue = new Decimal(addressDetails.balanceSat).dividedBy(coinConfig.baseCurrencyUnit.multiplier);
												include includes/value-display.pug
									if (addressDetails && addressDetails.assets)
										each bal, assetName in addressDetails.assets
											div(class="row")
												div(class="summary-split-table-label") #{assetName} Balance
												div(class="summary-split-table-content monospace")
													- var value = new Decimal(bal).dividedBy(coinConfig.baseCurrencyUnit.multiplier);
													span #{value}

									if (addressDetails && addressDetails.txCount)
										div(class="row")
											div(class="summary-split-table-label") Transactions
											div(class="summary-split-table-content monospace") #{addressDetails.txCount.toLocaleString()}

									div(class="row")
										div(class="summary-split-table-label") QR Code
										div(class="summary-split-table-content monospace")
											img(src=addressQrCodeUrl, alt=address, style="border: solid 1px #ccc;")

								div(class="col-md-6")
									if (electrumScripthash)
										div(class="row")
											div(class="summary-split-table-label") Scripthash
											div(class="summary-split-table-content monospace") #{electrumScripthash}

									- var x = result.validateaddress;
									- var flagNames = ["Is Valid?", "Is Script?", "Is Witness?", "Is Mine?", "Is Watch-Only?"];
									- var flags = [x.isvalid, x.isscript, x.iswitness, x.ismine, x.iswatchonly];

									each flagName, index in flagNames
										div(class="row")
											div(class="summary-split-table-label") #{flagName}
											div(class="summary-split-table-content monospace")
												if (flags[index])
													i(class="fas fa-check text-success")
												else
													i(class="fas fa-times text-warning")

									div(class="row input-group input-group-sm")
										div(class="summary-split-table-label") Start Block
										div(class="summary-split-table-content monospace")
											input(id="startBlock", type="text", class="form-control form-control-sm", name="startBlock", placeholder="start block height", value=`${startBlock}`, onkeyup=`searchTransactions(event, "${paginationBaseUrl}", "trans-history", "startBlock", "numBlocks")`)
										div(class="summary-split-table-label") For # Blocks
										div(class="summary-split-table-content monospace")
											input(id="numBlocks" type="text", class="form-control form-control-sm", name="numBlocks", placeholder="for number of blocks", value=`${numBlocks}`, onkeyup=`searchTransactions(event, "${paginationBaseUrl}", "trans-history", "startBlock", "numBlocks")`)


					if (false)
						div(class="card mb-3 shadow-sm")
							div(class="card-header")
								span(class="h6") Flags
							div(class="card-body")
								div(class="table-responsive")
									table(class="table text-center")
										thead
											tr
												th Is Valid?
												th Is Script?
												th Is Witness?
												th Is Mine?
												th Is Watch-Only?
										tbody
											tr
												- var x = result.validateaddress;
												- var flags = [x.isvalid, x.isscript, x.iswitness, x.ismine, x.iswatchonly];

												each flag in flags
													td
														if (flag)
															i(class="fas fa-check text-success")
														else
															i(class="fas fa-times text-warning")
					- var hasAsset = addressDetails && addressDetails.assets && Object.keys(addressDetails.assets).length > 0;
					if (hasAsset)
						ul(class='nav nav-tabs mb-3')
							li(class="nav-item")
								a(data-toggle="tab", href=`#tab-${coinConfig.ticker}`, class="nav-link active", role="tab", onclick=`ajaxUpdate("/addressview/${address}?assetName=${coinConfig.ticker}", "tab-${coinConfig.ticker}")`) #{coinConfig.ticker}
							each bal, assetName in addressDetails.assets
								if(assetName !== coinConfig.ticker)
									- var hrefTab = `#tab-${assetName}`
									li(class="nav-item")
										a(data-toggle="tab", href=hrefTab, class="nav-link", role="tab", onclick=`ajaxUpdate("/addressview/${address}?assetName=${assetName}&startBlock=${startBlock}&numBlocks=${numBlocks}", "tab-${assetName}")`) #{assetName}
					if (hasAsset)
						div(class="tab-content")
							div(id=`tab-${coinConfig.ticker}`, class="tab-pane active", role="tabpanel")
								div(class="spinner-border lazyload", loadurl=`${paginationBaseUrl}&startBlock=${startBlock}&numBlocks=${numBlocks}`, role="status")
									span(class="sr-only") Loading...
							each bal, assetName in addressDetails.assets
								if(assetName !== coinConfig.ticker)
									div(id=`tab-${assetName}`, class="tab-pane", role="tabpanel")
										div(class="spinner-border" role="status")
											span(class="sr-only") Loading...
					else
						div(id="trans-history" class="card mb-3 shadow-sm")
							div(class="spinner-border lazyload", loadurl=`${paginationBaseUrl}&startBlock=${startBlock}&numBlocks=${numBlocks}`, role="status")
								span(class="sr-only") Loading...
				div(id="tab-json", class="tab-pane", role="tabpanel")
					div(class="highlight")
						h4 validateaddress
						pre
							code(class="json bg-light", data-lang="json") #{JSON.stringify(result.validateaddress, null, 4)}

						if (addressDetails)
							h4 addressDetails
							pre
								code.json.bg-light #{JSON.stringify(addressDetails, null, 4)}
